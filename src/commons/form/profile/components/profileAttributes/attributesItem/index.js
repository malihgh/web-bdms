export const attributes = [
  {
    id: 0,
    type: 'Input',
    label: 'layer_depth_from',
    onChange: () => console.log('layer_depth_from'),
    value: 'this.state.layer.depth_from',
    isVisible: true,
    require: true,
  },
  {
    id: 1,
    type: 'Input',
    label: 'layer_depth_to',
    onChange: () => console.log('layer_depth_to'),
    value: 'this.state.layer.depth_to',
    isVisible: true,
    require: true,
    // ref:createRef(),
  },
  {
    id: 2,
    type: 'TextArea',
    label: 'description',
    onChange: () => console.log('description'),
    value: 'this.state.layer.description',
    isVisible: true,
  },
  {
    id: 3,
    type: 'TextArea',
    label: 'layer_geology',
    onChange: () => console.log('layer_geology'),
    value: 'this.state.layer.geology',
    isVisible: false,
  },
  {
    id: 4,
    type: 'Radio',
    label: 'layer_last',
    value: true,
    onYesSelect: () => console.log('Yes'),
    onNoSelect: () => console.log('No'),
    isVisible: true,
  },
  {
    id: 5,
    type: 'Dropdown',
    label: 'layer_qt_description',
    value: 'this.state.layer.qt_description',
    schema: 'qt_description',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  { id: 6 ,
    type:'DomainTree',
    label:'layer_lithology',
    value:'this.state.layer.lithology',
    schema:'custom.lit_pet_top_bedrock',
    onChange: () => console.log('DomainTree'),
    levels:{
      1: 'rock',
      2: 'process',
      3: 'type',
    },
    isVisible:true,
    require:true
  },
  { id: 7,
    type:'DomainTree',
    label:'layer_lithostratigraphy',
    value:'this.state.layer.lithostratigraphy',
    schema:'custom.lit_str_top_bedrock',
    onChange: () => console.log('DomainTree'),
    levels:{
      1: 'super',
      2: 'group',
      3: 'subgroup',
      4: 'superformation',
      5: 'formation',
    },
    isVisible:true,
    require:true
  },
  { id: 8,
    type:'DomainTree',
    label:'layer_chronostratigraphy',
    value:'this.state.layer.chronostratigraphy',
    schema:'custom.chro_str_top_bedrock',
    onChange: () => console.log('DomainTree'),
    levels:{
      1: '1st_order_eon',
      2: '2nd_order_era',
      3: '3rd_order_period',
      4: '4th_order_epoch',
      5: '5th_order_sub_epoch',
      6: '6th_order_sub_stage',
    },
    isVisible:true,
    require:false
  },
  {
    id: 9,
    type: 'Dropdown',
    label: 'layer_color',
    value: 'this.state.layer.color',
    schema: 'mlpr112',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 10,
    type: 'Dropdown',
    label: 'layer_plasticity',
    value: 'this.state.layer.plasticity',
    schema: 'mlpr101',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 11,
    type: 'Dropdown',
    label: 'layer_humidity',
    value: 'this.state.layer.layer_humidity',
    schema: 'mlpr105',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 12,
    type: 'Dropdown',
    label: 'layer_compactness',
    value: 'this.state.layer.compactness',
    schema: 'mlpr102',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 13,
    type: 'Dropdown',
    label: 'layer_alteration',
    value: 'this.state.layer.alteration',
    schema: 'mlpr106',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 14,
    type: 'Dropdown',
    label: 'layer_compactness',
    value: 'this.state.layer.compactness',
    schema: 'mlpr102',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 15,
    type: 'Dropdown',
    label: 'layer_organic_component',
    value: 'this.state.layer.organic_component',
    schema: 'mlpr108',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 16,
    type: 'Radio',
    label: 'layer_striae',
    value: false,
    onYesSelect: () => console.log('Yes'),
    onNoSelect: () => console.log('No'),
    isVisible: false,
  },
  {
    id: 17,
    type: 'Dropdown',
    label: 'layer_grain_size_1',
    value: 'this.state.layer.grain_size_1',
    schema: 'mlpr109',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 18,
    type: 'Dropdown',
    label: 'layer_grain_size_2',
    value: 'this.state.layer.grain_size_2',
    schema: 'mlpr109',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 19,
    type: 'Dropdown',
    label: 'layer_grain_shape',
    value: 'this.state.layer.grain_shape',
    schema: 'mlpr110',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 20,
    type: 'Dropdown',
    label: 'layer_grain_granularity',
    value: 'this.state.layer.grain_granularity',
    schema: 'mlpr115',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 21,
    type: 'Dropdown',
    label: 'layer_cohesion',
    value: 'this.state.layer.cohesion',
    schema: 'mlpr116',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 22,
    type: 'Dropdown',
    label: 'layer_further_properties',
    value: 'this.state.layer.further_properties',
    schema: 'mlpr117',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 23,
    type: 'Dropdown',
    label: 'layer_uscs_1',
    value: 'this.state.layer.uscs_1',
    schema: 'mlpr101',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 24,
    type: 'Dropdown',
    label: 'layer_uscs_2',
    value: 'this.state.layer.uscs_2',
    schema: 'mlpr101',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 25,
    type: 'Dropdown',
    label: 'layer_uscs_3',
    value: 'this.state.layer.uscs_3',
    schema: 'mlpr101',
    multiple: false,
    search: false,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 26,
    type: 'Input',
    label: 'layer_uscs_original',
    onChange: () => console.log('layer_uscs_original'),
    value: 'this.state.layer.uscs_original',
    isVisible: false,
    require: false,
  },
  {
    id: 27,
    type: 'Dropdown',
    label: 'layer_uscs_determination',
    value: 'this.state.layer.uscs_determination',
    schema: 'mlpr104',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 28,
    type: 'Dropdown',
    label: 'layer_debris',
    value: 'this.state.layer.debris',
    schema: 'mcla107',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 29,
    type: 'Dropdown',
    label: 'layer_lit_pet_deb',
    value: 'this.state.layer.lit_pet_deb',
    schema: 'custom.lit_pet_top_bedrock',
    multiple: true,
    search: true,
    onChange: () => console.log('Dropdown'),
    isVisible: false,
  },
  {
    id: 30,
    type: 'TextArea',
    label: 'remarks',
    onChange: () => console.log('remarks'),
    value: 'this.state.layer.notes',
    isVisible: true,
  },
];
